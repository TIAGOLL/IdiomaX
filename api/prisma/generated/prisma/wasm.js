
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdressesScalarFieldEnum = {
  id: 'id',
  street: 'street',
  zip_code: 'zip_code',
  district: 'district',
  complement: 'complement',
  city: 'city',
  state: 'state',
  number: 'number',
  active: 'active'
};

exports.Prisma.AuthScalarFieldEnum = {
  token: 'token',
  type: 'type',
  expires_at: 'expires_at',
  refresh_token: 'refresh_token'
};

exports.Prisma.Boleto_apiScalarFieldEnum = {
  id: 'id',
  developer_application_key: 'developer_application_key',
  client_id: 'client_id',
  client_secret: 'client_secret'
};

exports.Prisma.BooksScalarFieldEnum = {
  id: 'id',
  courses_id: 'courses_id',
  name: 'name',
  position: 'position'
};

exports.Prisma.ClassesScalarFieldEnum = {
  id: 'id',
  theme: 'theme',
  start_date: 'start_date',
  end_date: 'end_date',
  professionals_id: 'professionals_id',
  classrooms_id: 'classrooms_id',
  presence_list_id: 'presence_list_id'
};

exports.Prisma.ClassroomsScalarFieldEnum = {
  id: 'id',
  date: 'date',
  hour: 'hour',
  books_id: 'books_id',
  created_at: 'created_at'
};

exports.Prisma.ConfigsScalarFieldEnum = {
  id: 'id',
  registrations_time: 'registrations_time'
};

exports.Prisma.CoursesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  created_at: 'created_at'
};

exports.Prisma.LessonsScalarFieldEnum = {
  id: 'id',
  books_id: 'books_id',
  name: 'name',
  url: 'url',
  position: 'position'
};

exports.Prisma.Monthly_feeScalarFieldEnum = {
  id: 'id',
  registrations_id: 'registrations_id',
  due_date: 'due_date',
  amount_to_be_paid: 'amount_to_be_paid',
  amount_paid: 'amount_paid',
  date_of_paid: 'date_of_paid',
  payment_method: 'payment_method',
  paid: 'paid'
};

exports.Prisma.PermissionsScalarFieldEnum = {
  id: 'id',
  create_classes: 'create_classes',
  update_classes: 'update_classes',
  delete_classes: 'delete_classes',
  update_students: 'update_students',
  delete_students: 'delete_students',
  create_students: 'create_students',
  update_professionals: 'update_professionals',
  create_professionals: 'create_professionals',
  delete_professionals: 'delete_professionals',
  create_registrations: 'create_registrations',
  update_registrations: 'update_registrations',
  delete_registrations: 'delete_registrations',
  dashboard: 'dashboard',
  create_courses: 'create_courses',
  update_courses: 'update_courses',
  delete_courses: 'delete_courses',
  create_classrooms: 'create_classrooms',
  update_classrooms: 'update_classrooms',
  delete_classrooms: 'delete_classrooms'
};

exports.Prisma.Presence_listScalarFieldEnum = {
  id: 'id',
  date: 'date',
  is_present: 'is_present',
  time_arrived: 'time_arrived'
};

exports.Prisma.ProfessionalsScalarFieldEnum = {
  id: 'id',
  role_id: 'role_id',
  adresses_id: 'adresses_id',
  cpf: 'cpf',
  name: 'name',
  first_name: 'first_name',
  last_name: 'last_name',
  phone: 'phone',
  email: 'email',
  gender: 'gender',
  date_of_birth: 'date_of_birth',
  active: 'active',
  admin: 'admin',
  avatar_url: 'avatar_url',
  password: 'password',
  user: 'user',
  hour_value: 'hour_value',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Records_of_studentsScalarFieldEnum = {
  id: 'id',
  students_id: 'students_id',
  description: 'description',
  title: 'title',
  date: 'date'
};

exports.Prisma.RegistrationsScalarFieldEnum = {
  id: 'id',
  students_id: 'students_id',
  courses_id: 'courses_id',
  start_date: 'start_date',
  end_date: 'end_date',
  monthly_fee_amount: 'monthly_fee_amount',
  created_by: 'created_by',
  created_at: 'created_at',
  locked: 'locked',
  completed: 'completed'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.StudentsScalarFieldEnum = {
  id: 'id',
  adresses_id: 'adresses_id',
  email: 'email',
  name: 'name',
  first_name: 'first_name',
  last_name: 'last_name',
  cpf: 'cpf',
  phone: 'phone',
  gender: 'gender',
  date_of_birth: 'date_of_birth',
  password: 'password',
  user: 'user',
  created_at: 'created_at',
  created_by: 'created_by',
  avatar_url: 'avatar_url',
  updated_at: 'updated_at',
  updated_by: 'updated_by',
  active: 'active'
};

exports.Prisma.Students_has_classroomsScalarFieldEnum = {
  id: 'id',
  registrations_id: 'registrations_id',
  classrooms_id: 'classrooms_id'
};

exports.Prisma.TasksScalarFieldEnum = {
  scores_id: 'scores_id',
  registrations_id: 'registrations_id',
  lessons_id: 'lessons_id',
  date: 'date',
  response: 'response',
  score_obtained: 'score_obtained',
  question: 'question',
  total_score: 'total_score'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  adresses: 'adresses',
  auth: 'auth',
  boleto_api: 'boleto_api',
  books: 'books',
  classes: 'classes',
  classrooms: 'classrooms',
  configs: 'configs',
  courses: 'courses',
  lessons: 'lessons',
  monthly_fee: 'monthly_fee',
  permissions: 'permissions',
  presence_list: 'presence_list',
  professionals: 'professionals',
  records_of_students: 'records_of_students',
  registrations: 'registrations',
  role: 'role',
  students: 'students',
  students_has_classrooms: 'students_has_classrooms',
  tasks: 'tasks'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
