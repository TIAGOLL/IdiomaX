
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RenamedclassScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  courses: 'courses',
  vacancies: 'vacancies'
};

exports.Prisma.Class_daysScalarFieldEnum = {
  id: 'id',
  initial_date: 'initial_date',
  final_date: 'final_date',
  class: 'class'
};

exports.Prisma.ClassesScalarFieldEnum = {
  id: 'id',
  theme: 'theme',
  start_date: 'start_date',
  end_date: 'end_date',
  class: 'class'
};

exports.Prisma.ClassroomsScalarFieldEnum = {
  id: 'id',
  number: 'number',
  created_at: 'created_at',
  block: 'block',
  companies: 'companies'
};

exports.Prisma.CompaniesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at',
  udpated_at: 'udpated_at',
  users: 'users',
  address: 'address'
};

exports.Prisma.ConfigsScalarFieldEnum = {
  id: 'id',
  registrations_time: 'registrations_time',
  companies: 'companies'
};

exports.Prisma.CoursesScalarFieldEnum = {
  id: 'id',
  description: 'description',
  created_at: 'created_at',
  name: 'name',
  registration_value: 'registration_value',
  companies: 'companies',
  workload: 'workload',
  monthly_fee_value: 'monthly_fee_value',
  minimum_grade: 'minimum_grade',
  maximum_grade: 'maximum_grade',
  minimum_frequency: 'minimum_frequency',
  syllabus: 'syllabus'
};

exports.Prisma.DisciplineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  levels: 'levels'
};

exports.Prisma.LevelsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  level: 'level',
  courses: 'courses'
};

exports.Prisma.MaterialsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  file: 'file',
  levels: 'levels'
};

exports.Prisma.Monthly_feeScalarFieldEnum = {
  id: 'id',
  due_date: 'due_date',
  value: 'value',
  paid: 'paid',
  discount_payment_before_due_date: 'discount_payment_before_due_date',
  registrations: 'registrations',
  payment_method: 'payment_method',
  date_of_payment: 'date_of_payment'
};

exports.Prisma.Presence_listScalarFieldEnum = {
  id: 'id',
  is_present: 'is_present',
  users: 'users',
  classes: 'classes'
};

exports.Prisma.Records_of_studentsScalarFieldEnum = {
  id: 'id',
  registrations: 'registrations',
  description: 'description',
  title: 'title',
  created_at: 'created_at'
};

exports.Prisma.RegistrationsScalarFieldEnum = {
  id: 'id',
  start_date: 'start_date',
  monthly_fee_amount: 'monthly_fee_amount',
  created_at: 'created_at',
  locked: 'locked',
  completed: 'completed',
  users: 'users',
  companies: 'companies'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.TasksScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  file: 'file',
  score: 'score',
  description: 'description',
  title: 'title',
  disciplines: 'disciplines',
  due_date: 'due_date'
};

exports.Prisma.TokensScalarFieldEnum = {
  id: 'id',
  type: 'type',
  expires_at: 'expires_at',
  createdAt_: 'createdAt_',
  users: 'users'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  avatar_url: 'avatar_url',
  created_at: 'created_at',
  updated_at: 'updated_at',
  cpf: 'cpf',
  phone: 'phone',
  username: 'username',
  gender: 'gender',
  date_of_birth: 'date_of_birth',
  active: 'active',
  address: 'address',
  companies: 'companies'
};

exports.Prisma.Users_rolesScalarFieldEnum = {
  id: 'id',
  users_id: 'users_id',
  role_id: 'role_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Renamedclass: 'Renamedclass',
  class_days: 'class_days',
  classes: 'classes',
  classrooms: 'classrooms',
  companies: 'companies',
  configs: 'configs',
  courses: 'courses',
  discipline: 'discipline',
  levels: 'levels',
  materials: 'materials',
  monthly_fee: 'monthly_fee',
  presence_list: 'presence_list',
  records_of_students: 'records_of_students',
  registrations: 'registrations',
  roles: 'roles',
  tasks: 'tasks',
  tokens: 'tokens',
  users: 'users',
  users_roles: 'users_roles'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
